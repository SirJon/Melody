{"version":3,"file":"main.js","sources":["js/data/game.js","js/utils.js","js/AbstractView.js","js/templates/screens/components-templates.js","js/templates/screens/timer-view.js","js/templates/screens/level-genre/level-genre-view.js","js/utils/show-screen.js","js/utils/timer.js","js/data/game-timer.js","js/templates/screens/level-genre/level-genre.js","js/templates/control-game.js","js/templates/screens/welcome/welcome-view.js","js/templates/screens/welcome/welcome.js","js/main.js"],"sourcesContent":["import songs from './songs.js';\n\nexport const GameSettings = {\n  MAX_GAME_TIME: 300, // секунды\n  MAX_QUICK_ANSWER_TIME: 30, // секунды\n  MIN_TIMER_DANGER_ZONE: 30, // секунды\n  MAX_COUNT_NOTES: 3,\n  MAX_COUNT_MISTAKES: 3,\n  MAX_COUNT_ANSWERS: 10,\n  MAX_COUNT_LEVELS: 10\n};\n\nexport const initialState = {\n  timer: null,\n  mistakes: 0,\n  level: 0,\n  get time() {\n    if (this.timer === null) {\n      return GameSettings.MAX_GAME_TIME;\n    }\n\n    return this.timer.seconds;\n  },\n  resetToDefault() {\n    this.timer = null;\n    this.mistakes = 0;\n    this.level = 0;\n  }\n};\n\nexport const currentPlayer = {\n  score: 0,\n  remainingTime: initialState.time,\n  remainingNotes: GameSettings.MAX_COUNT_NOTES - initialState.mistakes,\n  answers: [], // массив объектов, каждый объект содержит ключ correctly с значением true или false и ключ time с числовым значением в секундах\n  get spentTime() {\n    return GameSettings.MAX_GAME_TIME - initialState.time;\n  },\n  resetToDefault() {\n    this.score = 0;\n    this.remainingTime = initialState.time;\n    this.remainingNotes = GameSettings.MAX_COUNT_NOTES - initialState.mistakes;\n    this.answers = [];\n  }\n};\n\nexport const playersStats = [4, 5, 8, 10, 11, 15, 19];\n\nexport const questions = [\n  {\n    \"type\": \"genre\",\n    \"question\": \"Выберите все песни в жанре R'n'B\",\n    \"genre\": \"rnb\",\n    \"answers\": [\n      {\n        \"src\": \"/path/to/file.mp3\",\n        \"genre\": \"rnb\"\n      },\n      {\n        \"src\": \"/path/to/file.mp3\",\n        \"genre\": \"blues\"\n      },\n      {\n        \"src\": \"/path/to/file.mp3\",\n        \"genre\": \"rock\"\n      },\n      {\n        \"src\": \"/path/to/file.mp3\",\n        \"genre\": \"rnb\"\n      }\n    ]\n  },\n  {\n    \"type\": \"genre\",\n    \"question\": \"Выберите все блюзовые песни\",\n    \"genre\": \"blues\",\n    \"answers\": [\n      {\n        \"src\": \"/path/to/file.mp3\",\n        \"genre\": \"blues\"\n      },\n      {\n        \"src\": \"/path/to/file.mp3\",\n        \"genre\": \"pop\"\n      },\n      {\n        \"src\": \"/path/to/file.mp3\",\n        \"genre\": \"rock\"\n      },\n      {\n        \"src\": \"/path/to/file.mp3\",\n        \"genre\": \"rnb\"\n      }\n    ]\n  },\n  {\n    \"type\": \"artist\",\n    \"question\": \"Кто исполняет эту песню?\",\n    \"src\": \"path/to/file.mp3\",\n    \"answers\": [\n      {\n        \"image\": {\n          \"url\": \"http://placehold.it/705x455\",\n          \"width\": 300,\n          \"height\": 300\n        },\n        \"title\": \"Пелагея\",\n        \"isCorrect\": false\n      },\n      {\n        \"image\": {\n          \"url\": \"http://placehold.it/705x455\",\n          \"width\": 300,\n          \"height\": 300\n        },\n        \"title\": \"Краснознамённая дивизия имени моей Бабушки\",\n        \"isCorrect\": false\n      },\n      {\n        \"image\": {\n          \"url\": \"http://placehold.it/705x455\",\n          \"width\": 300,\n          \"height\": 300\n        },\n        \"title\": \"Кровосток\",\n        \"isCorrect\": true\n      }\n    ]\n  }\n];","const app = document.querySelector(`.js-app`);\n\nexport const getNode = (string) => {\n  let node = document.createElement(`div`);\n  node.innerHTML = string.trim();\n\n  return node.firstChild;\n};\n\nexport const getRandomValue = (min, max) => {\n  return Math.floor(Math.random() * (max - min) + min);\n}","import {getNode} from \"./utils\";\nexport default class AbstractView {\n  constructor() {\n    if (new.target === AbstractView) {\n      throw new Error(`Can't instantiate AbstractView`);\n    }\n  }\n\n  get template(){\n    throw new Error(`Abstract method called`);\n  }\n\n  render() {\n    return getNode(this.template);\n  }\n\n  bind(){\n    throw new Error(`Abstract method called`);\n  }\n\n  get element() {\n    if (!this._element) {\n      this._element = this.render();\n      this.bind();\n    };\n    return this._element;\n  }\n};","export const logoTemplate = `<section class=\"logo\" title=\"Угадай мелодию\"><h1>Угадай мелодию</h1></section>`;\r\n\r\nexport const replayButtonTemplate = `<span role=\"button\" tabindex=\"0\" class=\"main-replay js-main-replay\">Сыграть ещё раз</span>`;\r\n\r\nexport const getMistakesTemplate = (state) => {\r\n  return `<div class=\"main-mistakes\">\r\n            ${new Array(state.mistakes).fill(`<img class=\"main-mistake\" src=\"img/wrong-answer.png\" width=\"35\" height=\"49\">`).join(``)}\r\n          </div>`;\r\n};","class TimerView {\r\n  get template() {\r\n    return `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"timer\" viewBox=\"0 0 780 780\">\r\n              <circle\r\n                cx=\"390\" cy=\"390\" r=\"370\"\r\n                class=\"timer-line\"\r\n                style=\"filter: url(.#blur); transform: rotate(-90deg) scaleY(-1); transform-origin: center\">\r\n              </circle>\r\n\r\n              <div class=\"timer-value js-timer-value\" xmlns=\"http://www.w3.org/1999/xhtml\">\r\n                <span class=\"timer-value-mins js-timer-value-mins\">00</span><!--\r\n                --><span class=\"timer-value-dots js-timer-value-dots\">:</span><!--\r\n                --><span class=\"timer-value-secs js-timer-value-secs\">00</span>\r\n              </div>\r\n            </svg>`;\r\n  }\r\n\r\n  updateTime(seconds) {\r\n\r\n  }\r\n}\r\n\r\nexport default TimerView;","import AbstractView from \"../../../AbstractView\";\r\nimport { getMistakesTemplate, getPlayerWrapperTemplate } from \"../components-templates\";\r\nimport TimerView from \"../timer-view\";\r\n\r\nconst answerSendButtonTemplate = `<button class=\"genre-answer-send js-genre-answer-send\" type=\"submit\" disabled>Ответить</button>`;\r\n\r\nconst getTitleTemplate = (text) => {\r\n  return `<h2 class=\"title\">${text}</h2>`;\r\n};\r\n\r\nconst getPlayerWrapperTemplate = (songSrc) => {\r\n  return `<div class=\"player-wrapper\">\r\n            <div class=\"player\">\r\n              <audio src=\"${songSrc}\"></audio>\r\n              <button class=\"player-control player-control--play js-song-play\"></button>\r\n              <div class=\"player-track\">\r\n                <span class=\"player-status\"></span>\r\n              </div>\r\n            </div>\r\n          </div>`;\r\n};\r\n\r\nconst getGenreAnswerTemplate = (answerNumber, songName, songSrc) => {\r\n  return `<div class=\"genre-answer\">\r\n            ${getPlayerWrapperTemplate(songSrc)}\r\n            <input class=\"js-genre-answer-input\" type=\"checkbox\" name=\"answer\" value=\"${songName}\" id=\"a-${answerNumber}\">\r\n            <label class=\"genre-answer-check\" for=\"a-${answerNumber}\"></label>\r\n          </div>`;\r\n};\r\n\r\nconst getScreenLevelGenreTemplate = (state, question) => {\r\n  return `<section class=\"main main--level main--level-genre js-main\">\r\n            ${new TimerView().template}\r\n            ${getMistakesTemplate(state)}\r\n            <div class=\"main-wrap\">\r\n              ${getTitleTemplate(question.question)}\r\n               <form class=\"genre js-genre\">\r\n                ${question.answers.reduce((returnMsg, answers, i) => {\r\n    return (returnMsg + getGenreAnswerTemplate(i + 1, answers.genre, answers.src));\r\n  }, ``)}\r\n                ${answerSendButtonTemplate}\r\n               </form>\r\n            </div>\r\n          </section>`;\r\n};\r\n\r\nexport default class LevelGenreView extends AbstractView {\r\n  constructor(state, question) {\r\n    super();\r\n    this.state = state;\r\n    this.question = question;\r\n  }\r\n\r\n  get template() {\r\n    return getScreenLevelGenreTemplate(this.state, this.question);\r\n  };\r\n\r\n  onClick() {\r\n  };\r\n\r\n  onInputs() {\r\n\r\n  }\r\n\r\n  bind() {\r\n    const genreAnswersInputs = [...this.element.querySelectorAll(`.js-genre-answer-input`)];\r\n    // genreAnswersInputs.forEach(it => it.checked = false);\r\n    const sendButton = this.element.querySelector(`.js-genre-answer-send`);\r\n    // const onGenreAnswerClick = () => {\r\n    //   sendButton.disabled = !(genreAnswersInputs.some((it) => it.checked));\r\n    // };\r\n    // onGenreAnswerClick();\r\n    // genreAnswersInputs.forEach(it => it.addEventListener(`change`, onGenreAnswerClick));\r\n    sendButton.addEventListener(`click`, this.onClick);\r\n  };\r\n};","const app = document.querySelector(`.js-app`);\r\n\r\nconst showScreen = (screen) => {\r\n  const oldScreen = app.querySelector(`.js-main`);\r\n  const newScreen = screen;\r\n  app.replaceChild(newScreen, oldScreen);\r\n};\r\n\r\nexport default showScreen;","class Timer {\r\n  constructor(seconds) {\r\n    this.seconds = seconds;\r\n  }\r\n\r\n  tick() {\r\n    if (this.seconds <= 0) {\r\n      return -1;\r\n    }\r\n\r\n    return --this.seconds;\r\n  }\r\n}\r\n\r\nexport default Timer;","import Timer from \"../utils/timer\";\r\n\r\n// Создаем таймер\r\nexport const createGameTimer = (state, maxGameTime) => {\r\n  state.timer = new Timer(maxGameTime);\r\n};\r\n\r\n// Запускаем таймер\r\nexport const startGameTimer = (state, minTimerDangerZone) => {\r\n  return setInterval(() => {\r\n\r\n    // Когда осталось менее 30 секунд таймер должен начать мигать красным цветом\r\n    if (state.timer.seconds < minTimerDangerZone) {}\r\n\r\n    state.timer.tick();\r\n  }, 1000);\r\n};","import LevelGenreView from \"./level-genre-view\";\r\n\r\nconst getScreenLevelGenre = (state, questions) => {\r\n  const screenLevelGenre = new LevelGenreView(state, questions);\r\n\r\n  screenLevelGenre.onClick = () => {\r\n    controlGame(state);\r\n  };\r\n\r\n  return screenLevelGenre.element;\r\n};\r\n\r\nexport default getScreenLevelGenre;\r\n\r\n","import { GameSettings, questions, currentPlayer, playersStats } from \"../data/game\";\r\nimport {createGameTimer, startGameTimer} from \"../data/game-timer\";\r\nimport showScreen from \"../utils/show-screen\";\r\nimport getScreenLevelGenre from \"./screens/level-genre/level-genre\";\r\n\r\nlet gameTimer;\r\n\r\n// В зависимости от типа вопроса показываем один из двух типов игровых экранов\r\nconst checkQuestionType = (state, question) => {\r\n  if (question.type === `artist`) {\r\n    // showScreen(getScreenLevelArtist(state, question));\r\n    console.log(`artist`);\r\n    return;\r\n  }\r\n\r\n  if (question.type === `genre`) {\r\n    showScreen(getScreenLevelGenre(state, question));\r\n  }\r\n};\r\n\r\nconst controlGame = (state) => {\r\n\r\n  // Проверяем запущен ли игровой таймер, если нет, то запускаем\r\n  // Срабатывает перед показом первого уровня каждой отдельной игры\r\n  // Располагается тут, чтобы при завершении игры таймер можно было почистить через clearInterval\r\n  if (state.timer === null) {\r\n    createGameTimer(state, GameSettings.MAX_GAME_TIME);\r\n    gameTimer = startGameTimer(state, GameSettings.MIN_TIMER_DANGER_ZONE);\r\n  }\r\n\r\n  // Если кончилось время или игрок совершил максимально возможное количество ошибок\r\n  if (state.time === 0 || state.mistakes > GameSettings.MAX_COUNT_MISTAKES) {\r\n    clearInterval(gameTimer);\r\n    // showScreen(getScreenFailResult(state));\r\n    console.log(`совершил максимально возможное количество ошибок`);\r\n    initReplay();\r\n    return;\r\n  }\r\n\r\n  // Если игрок в процессе игры\r\n  if (state.level < GameSettings.MAX_COUNT_LEVELS) {\r\n    checkQuestionType(state, questions[state.level], currentPlayer);\r\n    state.level++;\r\n    return;\r\n  }\r\n\r\n  // Если игрок прошел все уровни\r\n  if (state.level === GameSettings.MAX_COUNT_LEVELS) {\r\n    clearInterval(gameTimer);\r\n    // showScreen(getScreenWinResult(GameSettings.MAX_QUICK_ANSWER_TIME, state, currentPlayer, playersStats));\r\n    console.log(`Прошёл все уровни`);\r\n    initReplay();\r\n  }\r\n};\r\n\r\nexport default controlGame;","import AbstractView from \"../../../AbstractView\";\nimport { logoTemplate } from \"../components-templates\";\n\nconst startButtonTemplate = `<button class=\"main-play js-main-start\">Начать игру</button>`;\nconst infoTemplate = `\n<h2 class=\"title main-title\">Правила игры</h2>\n<p class=\"text main-text\">\n  Правила просты — за 5 минут ответить на все вопросы.<br>\n  Ошибиться можно 3 раза.<br>\n  Удачи!\n</p>`.trim();\nconst screenWelcomeTemplate = `\n<section class=\"main main--welcome js-main\">\n  ${logoTemplate}\n  ${startButtonTemplate}\n  ${infoTemplate}\n</section>`.trim();\n\nexport default class WelcomView extends AbstractView {\n  constructor(level) {\n    super();\n    this.level = level;\n  };\n\n  get template() {\n    return screenWelcomeTemplate;\n  };\n\n  onClick(){\n  };\n\n  bind() {\n    const playButton = this.element.querySelector(`.js-main-start`);\n    playButton.addEventListener(`click`, this.onClick);\n  };\n};","import { initialState, questions } from \"../../../data/game\";\r\nimport showScreen from \"../../../utils/show-screen\";\r\nimport controlGame from \"../../control-game\";\r\nimport getScreenLevelGenre from \"../level-genre/level-genre\";\r\nimport WelcomView from \"./welcome-view\";\r\n\r\n\r\nconst getScreenWelcome = (state) => {\r\n  const screenWelcome = new WelcomView();\r\n\r\n  screenWelcome.onClick = () => {\r\n    controlGame(state);\r\n  };\r\n\r\n  return screenWelcome.element;\r\n};\r\n\r\nexport default getScreenWelcome;","import { initialState } from \"./data/game\";\r\nimport LevelGenreView from \"./templates/screens/level-genre/level-genre-view\";\r\nimport getScreenWelcome from \"./templates/screens/welcome/welcome\";\r\nimport showScreen from \"./utils/show-screen\";\r\n\r\nshowScreen(getScreenWelcome(initialState));"],"names":["app","controlGame"],"mappings":"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"}